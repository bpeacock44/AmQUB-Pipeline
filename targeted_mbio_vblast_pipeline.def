Bootstrap: docker
From: ubuntu:22.04

%files
    helper_functions
    pipeline_scripts
    optional_analyses_scripts

%post
    export TZ='America/Los_Angeles'
    export DEBIAN_FRONTEND=noninteractive
    
    # Create directories
    mkdir -p /bind /blast /database /edirect /python-venvs
    
    # Make helper scripts executable
    chmod +x helper_functions/*
    chmod +x pipeline_scripts/*
    
    # Update and install packages
    apt -y update && apt -y upgrade
    apt -y install build-essential util-linux nano vim less python3-venv locales file rename man-db wget software-properties-common dirmngr curl
    
    # Setup locales
    echo "en_US.UTF-8 UTF-8" >> /etc/locale.gen
    locale-gen en_US.utf8
    export LC_ALL=en_US.UTF-8
    export LANG=en_US.UTF-8
    
    # Install R
    wget -qO- https://cloud.r-project.org/bin/linux/ubuntu/marutter_pubkey.asc | tee -a /etc/apt/trusted.gpg.d/cran_ubuntu_key.asc
    add-apt-repository "deb https://cloud.r-project.org/bin/linux/ubuntu $(lsb_release -cs)-cran40/"
    apt install -y --no-install-recommends \
        r-base-core=4.3.3* \
        r-base-dev=4.3.3* \
        r-base-html=4.3.3* \
        r-doc-html=4.3.3* \
        libcurl4-openssl-dev \
        libharfbuzz-dev \
        libfribidi-dev \
        libgit2-dev \
        libxml2-dev \
        libfontconfig1-dev \
        libssl-dev \
        libfreetype6-dev \
        libpng-dev \
        libtiff5-dev \
        libjpeg-dev \
        libreadline-dev

    echo "options(repos = c(CRAN = 'https://cran.rstudio.com/'), download.file.method = 'libcurl')" >> /usr/lib/R/etc/Rprofile.site
    mkdir -p /library
    echo "R_LIBS_SITE=/library:\${R_LIBS_SITE}" >> /usr/lib/R/etc/Renviron.site

    Rscript -e 'install.packages(c("dplyr", "readr", "optparse", "BiocManager"))'
    Rscript -e 'BiocManager::install("edgeR")'

    # Download and install BLAST+
    wget https://ftp.ncbi.nlm.nih.gov/blast/executables/blast+/LATEST/ncbi-blast-2.16.0+-x64-linux.tar.gz -P /tmp/
    tar -zxvf /tmp/ncbi-blast-2.16.0+-x64-linux.tar.gz  -C /blast/
    rm -r /tmp/ncbi-blast-2.16.0+-x64-linux.tar.gz 

    # Setup NCBI E-utils
    echo "N" | sh -c "$(wget -q https://ftp.ncbi.nlm.nih.gov/entrez/entrezdirect/install-edirect.sh -O -)"
    mv $HOME/edirect /edirect

    # Create Python virtual environment
    python3 -m venv /python-venvs/python-pip-modules
    /python-venvs/python-pip-modules/bin/python -m pip install --no-cache-dir -U wheel docopt biopython xmltodict pandas

    # Install Miniconda
    wget https://repo.anaconda.com/miniconda/Miniconda3-py312_24.3.0-0-Linux-x86_64.sh -O /miniconda.sh
    bash /miniconda.sh -b -p /opt/miniconda
    export PATH="/opt/miniconda/bin:$PATH"

    # Configure Conda
    conda config --add channels bioconda
    conda config --add channels conda-forge
    conda config --add channels free
    conda config --set restore_free_channel true
    conda config --set channel_priority flexible

    # Create Conda environment
    conda env create -n qiime2-amplicon-2024.5 --file https://data.qiime2.org/distro/amplicon/qiime2-amplicon-2024.5-py39-linux-conda.yml
    conda install -n qiime2-amplicon-2024.5 seqkit 
    conda install -n qiime2-amplicon-2024.5 bioconda::embassy-phylip
    echo ". /opt/miniconda/etc/profile.d/conda.sh" >> $SINGULARITY_ENVIRONMENT
    echo "conda activate qiime2-amplicon-2024.5" >> $SINGULARITY_ENVIRONMENT
    
    # Remove leftover files
    rm /miniconda.sh

%environment
    export PATH="/opt/miniconda/bin:$PATH"
    export LANGUAGE=en_US:en
    export LC_ALL=en_US.UTF-8
    export LANG=en_US.UTF-8
    export PATH="/bind:$PATH"
    export PATH="/home/programs/:$PATH"
    export PATH="/helper_functions:$PATH"    
    export PATH="/optional_analyses_scripts:$PATH"
    export PATH="/pipeline_scripts:$PATH"
    export PATH="/blast/ncbi-blast-*/bin:$PATH"  # Updated to use wildcard for blast directory
    export HDIR="/helper_functions"
    export PATH="/edirect:$PATH"

%labels
    author mcuay001@ucr.edu
    version 2.1.2

%help
    Singularity container for the Borneman lab.
    Please refer to the singularity_instructions.md for information on how to run the container.

%test
    exit 0